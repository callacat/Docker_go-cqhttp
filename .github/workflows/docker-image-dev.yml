name: Docker-Build-dev

on:
  push:
    branches:
      - main
    # paths:
    #   - '.github\workflows\docker-image-dev.yml'
    #   - 'Dockerfile-dev'

  schedule:
    - cron: '12 3 * * *'  #每天一次

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: getDev
      id: dev
      run: |
        sudo apt-get install jq -y
        LATEST_RUN_URL=$(curl -s 'https://api.github.com/repos/Mrs4s/go-cqhttp/actions/workflows/ci.yml/runs' | jq -r '.workflow_runs[0].html_url')
        echo $LATEST_RUN_URL

        ARTIFACTS_URLS=$(curl -s "${LATEST_RUN_URL}" | jq -r '.artifacts[] | select(.archive_download_url) | "https://github.com/\(.archive_download_url)"')
        echo $ARTIFACTS_URLS

        if [ -n "${ARTIFACTS_URLS}" ]; then
          for url in ${ARTIFACTS_URLS}; do
            filename=$(echo "${url}" | awk -F/ '{print $(NF-1)}')
            mkdir -p artifacts
            curl -L -o "artifacts/${filename}.zip" "${url}"
            unzip -o "artifacts/${filename}.zip" -d "artifacts/${filename}"
            rm -f "artifacts/${filename}.zip"
            ls artifacts/
            echo "url=true" >> GITHUB_OUTPUT
          done
        else
          echo "No Artifacts URLs found." >&2
          echo "url=false" >> GITHUB_OUTPUT
          exit 1
        fi

    - name: Login to DockerHub
      if: ${{ steps.dev.outputs.url == 'true' }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      if: ${{ steps.dev.outputs.url == 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile-dev
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
            ${{ secrets.DOCKER_USERNAME }}/gocqhttp:dev